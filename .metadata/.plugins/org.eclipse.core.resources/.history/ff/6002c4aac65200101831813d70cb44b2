package filter;

import jakarta.servlet.Filter;
import jakarta.servlet.FilterChain;
import jakarta.servlet.FilterConfig;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.annotation.WebFilter;
import jakarta.servlet.http.HttpFilter;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;


@WebFilter(urlPatterns = {"/principal/*"})/*Intercepta todas as requisições que vierem do projeto ou mapeamento*/
public class FilterAutentication extends HttpFilter implements Filter {
       
	private static final long serialVersionUID = 1L;


	public FilterAutentication() {
    }

	/*Encerra os processos quando o servidor é parado*/
	//Mataria os processos de conexão com o banco
	public void destroy() {
	}

	/*Intercepta as requisições e as respostas no sistema*/
	/*Tudo que fizer no sistema vai fazer por aqui*/
	/*Validação de autenticação*/
	/*Dar commit e rollback de transações bancárias*/
	/*Validar e fazer redirecionamento de páginas*/
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		
		HttpServletRequest req = (HttpServletRequest) request;
		HttpSession session = req.getSession();
		
		/*"usuario" passado no ServletLogin*/
		String usuarioLogado = (String) session.getAttribute("usuario");
		
//		String urlParaAutenticar = req.getServletPath();/*URL que está sendo acessada*/
		
		String url = req.getServletPath();
		
		boolean protegida = url.startsWith("/principal/") && !url.equals("/principal/ServletLogin");
		
		if (protegida && (usuarioLogado == null ||  usuarioLogado.isEmpty())) {/*Não está logado*/
			
			RequestDispatcher redireciona = request.getRequestDispatcher("/index.jsp?url=" + url);
			request.setAttribute("msg", "Por favor realize o login");
			redireciona.forward(request, response);
			return;/*Para a execução e redireciona para o login do sistema*/
			
		}else {
			chain.doFilter(request, response);
		}
		
		
		
	}

	/*Inicia os processos ou recursos quando o servidor sobe o projeto*/
	//Inicia a conexão com o banco
	public void init(FilterConfig fConfig) throws ServletException {
	}

}
