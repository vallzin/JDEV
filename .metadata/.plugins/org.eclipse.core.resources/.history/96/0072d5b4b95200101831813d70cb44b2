package filter;

import jakarta.servlet.Filter;
import jakarta.servlet.FilterChain;
import jakarta.servlet.FilterConfig;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.annotation.WebFilter;
import jakarta.servlet.http.HttpFilter;
import java.io.IOException;


@WebFilter(urlPatterns = {"/principal/*"})/*Intercepta todas as requisições que vierem do projeto ou mapeamento*/
public class FilterAutentication extends HttpFilter implements Filter {
       
	private static final long serialVersionUID = 1L;


	public FilterAutentication() {
    }

	/*Encerra os processos quando o servidor é parado*/
	//Mataria os processos de conexão com o banco
	public void destroy() {
	}

	/*Intercepta as requisições e as respostas no sistema*/
	/*Tudo que fizer no sistema vai fazer por aqui*/
	/*Validação de autenticação*/
	/*Dar commit e rollback de transações bancárias*/
	/*Validar e fazer redirecionamento de páginas*/
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		
		chain.doFilter(request, response);
	}

	/*Inicia os processos ou recursos quando o servidor sobe o projeto*/
	//Inicia a conexão com o banco
	public void init(FilterConfig fConfig) throws ServletException {
	}

}
